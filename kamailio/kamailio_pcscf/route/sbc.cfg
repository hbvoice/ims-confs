#!ifdef WITH_SBC
route[FROM_SBC] {
#!ifdef SBC_IGNORE_PORT
	if (ds_is_from_list(DISPATCHER_LIST_SBC, "3")) {
#!else
	if (ds_is_from_list(DISPATCHER_LIST_SBC)) {
#!endif
	xlog("L_INFO", "[$tU $fU $ci $rm] Route FROM_SBC \n");
		if (is_present_hf("X-URI")) {
			remove_hf("X-URI");
			$ru = $hdr(X-URI);
		}
		if (is_present_hf("P-Route")) {
			remove_hf("P-Route");
			remove_hf("Route");
			append_hf("Route: $hdr(P-Route)\r\n");
			$du = $(hdr(P-Route){nameaddr.uri});
		}
		remove_hf("X-Session-Case");
		remove_hf("X-C-Params");

		if (is_method("INVITE")) {
			if (is_present_hf("X-C-Params")) {
				remove_hf("Contact");
				append_hf("Contact: <$(ct{nameaddr.uri})>;$(hdr(X-C-Params){s.decode.base64})\r\n");
			}
			loose_route();
			if ($du =~ "sip:orig@.*") {
		/*		if (is_present_hf("P-Asserted-Identity") && ($(ai{tobody.host}) != $rd)) {
					remove_hf("P-Asserted-Identity");
					append_hf("P-Asserted-Identity: \"$(ai{tobody.user})\" <sip:$(ai{tobody.user})@$rd>\r\n");
				} */
				$avp(RR_CUSTOM_USER_AVP)="mo";
				t_on_reply("SBC_GET_CPARAMS");
			} else {
				if (is_present_hf("X-Session-Case") && ($hdr(X-Session-Case) == "term")) {
					# prepend mt as user for record route
					$avp(RR_CUSTOM_USER_AVP)="mt";
					# Handle Mobile Terminated requests
					route(MT);
					t_on_reply("MT_reply");
				} else {
					t_on_reply("SBC_GET_CPARAMS");
				}
			}
		}
		if (is_method("REGISTER")) {
			append_hf("Path: <sip:term@$Ri:$Rp;lr>\r\n");
		}
		$var(continue) = 0;
	} else {
		$var(continue) = 1;
	}
}

route[SBC_MO] {
	# Do basic MO Operations:
	xlog("L_INFO", "[$tU $fU $ci $rm] Route SBC_MO \n");
	route(MO);
#!ifdef WITH_SBC_CALL/
	if (is_method("INVITE") && !sdp_with_active_media("message")) {
#!endif
		if (!strempty($(ct{tobody.params}))) {
			append_hf("X-C-Params: $(ct{tobody.params}{s.encode.base64})\r\n");
		}
		append_hf("X-Session-Case: orig\r\n");

		msg_apply_changes();
		append_hf("P-Route: $hdr(Route)\r\n");

		# Do some Round-Robin on the SBC's
		t_on_failure("SBC_failure");
		# Choose an SBC to send the call to:
		if (!ds_select_dst(DISPATCHER_LIST_SBC, "4")) {
			send_reply("503", "Service Unavailable (SBC failure)");
			exit;
		}
#!ifdef WITH_SBC_CALL
	}
#!endif
}

route[SBC_MT] {
#!ifdef WITH_SBC_CALL
	if (is_method("INVITE") && !sdp_with_active_media("message")) {
#!endif
		if (!strempty($(ct{tobody.params}))) {
			append_hf("X-C-Params: $(ct{tobody.params}{s.encode.base64})\r\n");
		}
		append_hf("X-URI: $ru\r\n");

		append_hf("X-Session-Case: term\r\n");

		# Do some Round-Robin on the SBC's
		t_on_failure("SBC_failure");
		# Choose an SBC to send the call to:
		if (!ds_select_dst(DISPATCHER_LIST_SBC, "4")) {
			send_reply("503", "Service Unavailable (SBC failure)");
			exit;
		}
#!ifdef WITH_SBC_CALL
	} else {
		# prepend mt as user for record route
		$avp(RR_CUSTOM_USER_AVP)="mt";
		route(MT);
	}
#!endif
}

onreply_route[SBC_GET_CPARAMS] {
	if (is_present_hf("X-C-Params")) {
		remove_hf("Contact");
		append_hf("Contact: <$(ct{nameaddr.uri})>;$(hdr(X-C-Params){s.decode.base64})\r\n");
	}

	if (!strempty($(ct{tobody.params}))) {
		append_hf("X-C-Params: $(ct{tobody.params}{s.encode.base64})\r\n");
	}

	if (status =~ "180|183") {
		xlog("L_INFO", "[$tU $fU $ci $rm] onreply_Route of FROM_SBC for 183/180 Packet \n");
	}
	
}


######################################################################
# Negative replies to REGISTER requests:
######################################################################
failure_route[SBC_failure] {
	xlog("L_INFO", "[$tU $fU $ci $rm] In route SBC_Failure\n");
#!ifdef WITH_IPBLOCK
	if (is_method("REGISTER") && !ds_is_from_list("-1", "3")) {
		if (t_check_status("403|[5-6][0-9][0-9]")) {
			if ($sht(failedauth=>$si) != $null)
				$sht(failedauth=>$si) = $sht(failedauth=>$si) + 1;
			else
				$sht(failedauth=>$si) = 1;
			if ($sht(failedauth=>$si) > 10) {
				xlog("L_ALERT","ALERT: blocking $rm from $fu (IP:$si:$sp), more than 5 failed auth requests!\n");
				xlog("Blocking traffic from $si\n");
				$sht(ipban=>$si) = 1;
			}
		}
	}
#!endif
	# Choose another gateway, in case we

	
	if (t_check_status("480")) {
		xlog("L_INFO", "[$tU $fU $ci $rm] Received 480 In route SBC_Failure with Header: $hdr(Reason) $hdr(from) $hdr(Server)\n");
		if (is_present_hf("Reason")) {
                	send_reply("503", "CBS Rejected Call");
                	exit;
		}
        }

	# - get a local generated "408"

	if (t_check_status("408")) {
                send_reply("480", "P-CSCF Request Timeout");
                exit;
        }

	# - receive a 5xx or 6xx reply from the proxy.
	if (t_branch_timeout() || t_check_status("5..")) {
		if (ds_next_dst()) {
			# Do Failover in case problems:
			t_on_failure("SBC_failure");
			t_relay();
		} else {
			if (isflagset(FLT_MOBILE_ORIG)) {
				update_stat("mo_cst_ringing", "+1");
			}
			# Add a header, to indicate the phone should try again in 30 seconds.
			#append_hf("Retry-After: 30\r\n");
			send_reply("504", "Server Time-Out");
		}
		exit;
	}
	# Update stats for MO calls:
	if (isflagset(FLT_MOBILE_ORIG)) {
		if (t_check_status("486|487")) {
			update_stat("mo_ner", "+1");
		}
	}
	#route(NATMANAGE);
}
#!endif
